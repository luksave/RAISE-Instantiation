package br.ufg.inf.mestrado.hermeswidget.ontologies;

import com.hp.hpl.jena.ontology.OntClass;
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.ontology.OntModelSpec;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
 
/**
 * Vocabulary definitions from AQO3.owl 
 * @author Auto-generated by schemagen on 07 fev 2021 11:43 
 */
public class AQO3 {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    public static final OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    
    public static final Property belongsToRegional = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#belongsToRegional" );
    
    public static final Property days = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#days" );
    
    public static final Property hasAvgConc = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasAvgConc" );
    
    public static final Property hasFormula = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasFormula" );
    
    public static final Property hasHappenedOn = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasHappenedOn" );
    
    public static final Property hasHighConc = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasHighConc" );
    
    public static final Property hasIndexLevel = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasIndexLevel" );
    
    public static final Property hasIndexValue = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasIndexValue" );
    
    public static final Property hasLowerLimit = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasLowerLimit" );
    
    public static final Property hasMeasurementOf = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasMeasurementOf" );
    
    public static final Property hasOperationMode = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasOperationMode" );
    
    public static final Property hasPeriodicity = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasPeriodicity" );
    
    public static final Property hasStandardPeriodicity = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasStandardPeriodicity" );
    
    public static final Property hasUpperLimit = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hasUpperLimit" );
    
    public static final Property hours = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#hours" );
    
    public static final Property intervalFinishes = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#intervalFinishes" );
    
    public static final Property intervalStarts = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#intervalStarts" );
    
    public static final Property isA = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isA" );
    
    public static final Property isCalculatedBy = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isCalculatedBy" );
    
    public static final Property isCategorizedBy = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isCategorizedBy" );
    
    public static final Property isConcLevelFor = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isConcLevelFor" );
    
    public static final Property isDerivedBy = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isDerivedBy" );
    
    public static final Property isIndicatorFor = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isIndicatorFor" );
    
    public static final Property isPeriodicityFor = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isPeriodicityFor" );
    
    public static final Property isProvidedBy = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isProvidedBy" );
    
    public static final Property isStationOf = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#isStationOf" );
    
    public static final Property makesRefTo = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#makesRefTo" );
    
    public static final Property operatesInMode = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#operatesInMode" );
    
    public static final Property refersTo = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#refersTo" );
    
    public static final Property takesPlaceAt = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#takesPlaceAt" );
    
    public static final Property wasCollectedBy = m_model.createProperty( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#wasCollectedBy" );
    
    
    /**
     * Declaração das classes necessárias
     */
    
    
    public static final OntClass AQI_EPA_Critical = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA_Critical" );
    
    public static final OntClass AQI_EPA_Good = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA_Good" );
    
    public static final OntClass AQI_EPA_Moderate = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA_Moderate" );
    
    public static final OntClass AQI_EPA_Poor = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA_Poor" );
    
    public static final OntClass AQI_EPA_USA = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA_USA" );
    
    public static final OntClass AQI_EPA_Unhealthy = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA_Unhealthy" );
    
    public static final OntClass AQI_EPA_VeryUnhealthy = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA_VeryUnhealthy" );
    
    public static final OntClass AQ_Categorizations = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQ_Categorizations" );
    
    /** <p>It is a class to hold the index calculated by its formula.</p> */
    public static final OntClass AQ_Index = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQ_Index" );
    
    public static final OntClass AQ_Indicator = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQ_Indicator" );
  
    public static final OntClass AQ_Level = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQ_Level" );
    
    /** <p>It is a class to hold the measurement that is being collected. It will hold 
     *  the moment in time when it was collected or captured. It will have the pollutant, 
     *  the quantity value of the capture and from which agent and machine (sensor/station) 
     *  the measurement is provided.</p>
     */
    public static final OntClass AQ_Measurement = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQ_Measurement" );
    
    public static final OntClass AQ_UserIndicator = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQ_UserIndicator" );
    
    /** <p>É a coleta de indicadores que medem as atividades ou ações antropogênicas, 
     *  como emissões de gases de efeito estufa.</p>
     */
    public static final OntClass ActionIndicator = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ActionIndicator" );
    
    public static final OntClass Antropogenic = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Antropogenic" );
    
    public static final OntClass Automatic = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Automatic" );
    
    /** <p>300200.1</p> */
    public static final OntClass Bad = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Bad" );
    
    
    /** <p>Carbon Dioxide</p> */
    public static final OntClass CO2 = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CO2" ); 
    
    
    /**
     * INDICATOR PARA QUALIDADE DO AR DE CO2
     */
    public static final OntClass AQ_Indicator_of_CO2 = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQ_Indicator_of_CO2" );

    /**<p>CO2 Indicators</p> */
    
    public static final OntClass CO2_Good = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CO2_Good" );
        
    public static final OntClass CO2_Regular = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CO2_Regular" );
    
    public static final OntClass CO2_Poor = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CO2_Poor" );
    
    public static final OntClass CO2_Bad = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CO2_Bad" );
    
    public static final OntClass CO2_Lousy = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CO2_Lousy" );
    
    public static final OntClass CO2_Critical = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CO2_Critical" );
    
    
    /** <p>300.1500</p> */
    public static final OntClass Critical = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Critical" );
    
    public static final OntClass DateTimeInterval = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#DateTimeInterval" );
    
    public static final OntClass DerivationForms = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#DerivationForms" );
    
    public static final OntClass DurationDescription = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#DurationDescription" );
    
    /** <p>050</p> */
    public static final OntClass Good = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Good" );
    
    public static final OntClass IC_Good = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IC_Good" );
    
    public static final OntClass IC_Regular = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IC_Regular" );
    
    public static final OntClass IC_Poor = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IC_Poor" );
    
    public static final OntClass IC_Bad = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IC_Bad" );
    
    public static final OntClass IC_Lousy = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IC_Lousy" );
    
    public static final OntClass IC_Critical = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IC_Critical" );
      
    public static final OntClass IndexCategorization = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IndexCategorization" );
    
    public static final OntClass Index_formula = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Index_formula" );
    
    public static final OntClass Indicator = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Indicator" );
    
    public static final OntClass IndicatorCategorization = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IndicatorCategorization" );
    
    public static final OntClass IndicatorToIndexFormula = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IndicatorToIndexFormula" );
    
    /** <p>Total Suspended Particulate Matter = PM10 + PM2.5</p> */
    public static final OntClass MPTS = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#MPTS" );
    
    public static final OntClass Manual = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Manual" );

    
    public static final OntClass Natural_pollutant = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Natural_pollutant" );
    
    
    public static final OntClass Operation_Mode = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Operation_Mode" );
    
    
    public static final OntClass Pollutant = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Pollutant" );
    
    public static final OntClass Pollution_average = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Pollution_average" );
    
    /** <p>100.1200</p> */
    public static final OntClass Poor = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Poor" );
    
    public static final OntClass ProperInterval = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ProperInterval" );
    
    public static final OntClass RegionalOffice = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#RegionalOffice" );
    
    /** <p>50.1100</p> */
    public static final OntClass Regular = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Regular" );
    
    /** <p>O terceiro subconjunto dos tipos de indicadores. Ele acompanha as respostas 
     *  da sociedade para questões ambientais, como o número de pessoas atendidas 
     *  pelo tratamento de esgoto.</p>
     */
    public static final OntClass ResponseIndicator = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ResponseIndicator" );
    
    public static final OntClass SemiAutomatic = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#SemiAutomatic" );
    
    public static final OntClass StateIndicator = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#StateIndicator" );
    
    public static final OntClass Station = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Station" );
    
    public static final OntClass AQI_EPA = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#AQI_EPA" );
 
    public static final OntClass ASSIS = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ASSIS" );
    
    public static final OntClass Average = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Average" );
    
    public static final OntClass BOQ = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#BOQ" );
    
    public static final OntClass CSN = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#CSN" );
    
    public static final OntClass ER_CAS = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ER_CAS" );
    
    public static final OntClass ER_CBA = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ER_CBA" );
    
    public static final OntClass ER_LIT = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ER_LIT" );
    
    public static final OntClass ER_PGO = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#ER_PGO" );
    
    public static final OntClass IAP_InstAmbParana = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#IAP_InstAmbParana" );
        
    public static final OntClass Maximum = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Maximum" );
    
    public static final OntClass Minimum = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Minimum" );
    
    public static final OntClass Moderate = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Moderate" );
    
    public static final OntClass Monday = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Monday" );
    
    public static final OntClass PAR = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#PAR" );
      
    public static final OntClass STC = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#STC" );
       
    public static final OntClass Unhealthy = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#Unhealthy" );
    
    public static final OntClass VeryUnhealthy = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#VeryUnhealthy" );
     
    public static final OntClass microgram_per_cubic_metre = m_model.createClass( "http://www.semanticweb.org/ricardo/ontologies/2017/5/AirQualityOnto.owl#microgram_per_cubic_metre" );
    
    
    
    
    
}
